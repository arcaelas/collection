name: Despliegue de documentación
on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - '.github/workflows/docs-deploy.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Instalar dependencias
        run: |
          npm i -g yarn
          cd docs
          yarn install --frozen-lockfile

      - name: Construir documentación
        run: |
          cd docs
          yarn build

      - name: Configurar Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"

      - name: Desplegar en rama docs
        run: |
          # Guardar el hash del commit actual
          COMMIT_HASH=$(git rev-parse --short HEAD)
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          
          # Crear una rama temporal
          git checkout --orphan temp-docs
          
          # Eliminar todo excepto la carpeta build de docs
          find . -maxdepth 1 ! -name 'docs' ! -name '.git' -exec rm -rf {} \;
          find . -name 'node_modules' -type d -prune -exec rm -rf {} \;
          
          # Mover el contenido de docs/build a la raíz
          mv docs/build/* .
          rm -rf docs
          
          # Añadir archivo CNAME si existe
          if [ -f "CNAME" ]; then
            echo "CNAME encontrado, preservando..."
          else
            echo "docs.arcaelas.com" > CNAME
          fi
          
          # Añadir .nojekyll para evitar procesamiento de Jekyll en GitHub Pages
          touch .nojekyll
          
          # Commit y push
          git add -A
          git commit -m "docs: actualización de documentación desde commit ${COMMIT_HASH} - ${COMMIT_MESSAGE}"
          
          # Forzar push a la rama docs
          git push origin HEAD:docs --force
