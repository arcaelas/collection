"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8541],{7567:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>m,frontMatter:()=>c,metadata:()=>l,toc:()=>t});const l=JSON.parse('{"id":"api/manipulacion-elementos","title":"Manipulaci\xf3n de elementos","description":"Esta secci\xf3n documenta los m\xe9todos de Arcaelas Collection para manipular elementos individuales o grupos de elementos.","source":"@site/docs/api/manipulacion-elementos.md","sourceDirName":"api","slug":"/api/manipulacion-elementos","permalink":"/docs/api/manipulacion-elementos","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"docsSidebar","previous":{"title":"Agrupaci\xf3n y conteo","permalink":"/docs/api/agrupacion-conteo"},"next":{"title":"Utilidades","permalink":"/docs/api/utilidades"}}');var i=o(4848),s=o(8453);const c={sidebar_position:5},a="Manipulaci\xf3n de elementos",r={},t=[{value:"push",id:"push",level:2},{value:"Firma",id:"firma",level:3},{value:"Ejemplo",id:"ejemplo",level:3},{value:"delete",id:"delete",level:2},{value:"Firmas",id:"firmas",level:3},{value:"Ejemplos",id:"ejemplos",level:3},{value:"splice",id:"splice",level:2},{value:"Firma",id:"firma-1",level:3},{value:"Ejemplo",id:"ejemplo-1",level:3},{value:"sort",id:"sort",level:2},{value:"Firmas",id:"firmas-1",level:3},{value:"Ejemplos",id:"ejemplos-1",level:3},{value:"reverse",id:"reverse",level:2},{value:"Firma",id:"firma-2",level:3},{value:"Ejemplo",id:"ejemplo-2",level:3},{value:"unique",id:"unique",level:2},{value:"Firmas",id:"firmas-2",level:3},{value:"Ejemplos",id:"ejemplos-2",level:3},{value:"merge",id:"merge",level:2},{value:"Firma",id:"firma-3",level:3},{value:"Ejemplo",id:"ejemplo-3",level:3},{value:"concat",id:"concat",level:2},{value:"Firma",id:"firma-4",level:3},{value:"Ejemplo",id:"ejemplo-4",level:3}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"manipulaci\xf3n-de-elementos",children:"Manipulaci\xf3n de elementos"})}),"\n",(0,i.jsx)(n.p,{children:"Esta secci\xf3n documenta los m\xe9todos de Arcaelas Collection para manipular elementos individuales o grupos de elementos."}),"\n",(0,i.jsx)(n.h2,{id:"push",children:"push"}),"\n",(0,i.jsx)(n.p,{children:"A\xf1ade uno o m\xe1s elementos al final de la colecci\xf3n y devuelve la nueva longitud."}),"\n",(0,i.jsx)(n.h3,{id:"firma",children:"Firma"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"push(...items: T[]): number\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ejemplo",children:"Ejemplo"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const usuarios = new Collection<{ id: number; nombre: string }>();\n\n// A\xf1adir un elemento\nusuarios.push({ id: 1, nombre: 'Ana' });\n\n// A\xf1adir m\xfaltiples elementos\nconst nuevaLongitud = usuarios.push(\n  { id: 2, nombre: 'Carlos' },\n  { id: 3, nombre: 'Elena' }\n);\n\nconsole.log(nuevaLongitud); // 3\nconsole.log(usuarios.length); // 3\n"})}),"\n",(0,i.jsx)(n.h2,{id:"delete",children:"delete"}),"\n",(0,i.jsx)(n.p,{children:"Elimina elementos de la colecci\xf3n seg\xfan una condici\xf3n y devuelve los elementos eliminados."}),"\n",(0,i.jsx)(n.h3,{id:"firmas",children:"Firmas"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"// Con funci\xf3n callback\ndelete(callback: (value: T, index: number, array: T[]) => boolean): Collection<T>\n\n// Con clave y valor\ndelete(key: string, value: any): Collection<T>\n\n// Con clave, operador y valor\ndelete(key: string, operator: string | Operator, value: any): Collection<T>\n\n// Con objeto de consulta\ndelete(query: Record<string, any>): Collection<T>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ejemplos",children:"Ejemplos"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const productos = new Collection([\n  { id: 1, nombre: 'Mouse', precio: 20, stock: 0 },\n  { id: 2, nombre: 'Teclado', precio: 50, stock: 5 },\n  { id: 3, nombre: 'Monitor', precio: 200, stock: 0 },\n  { id: 4, nombre: 'Auriculares', precio: 80, stock: 3 }\n]);\n\n// Con funci\xf3n callback\nconst sinStock = productos.delete(p => p.stock === 0);\nconsole.log(sinStock.length); // 2 (elementos eliminados)\nconsole.log(productos.length); // 2 (elementos restantes)\n\n// Reiniciar para los siguientes ejemplos\nconst productos2 = new Collection([\n  { id: 1, nombre: 'Mouse', precio: 20, stock: 0 },\n  { id: 2, nombre: 'Teclado', precio: 50, stock: 5 },\n  { id: 3, nombre: 'Monitor', precio: 200, stock: 0 },\n  { id: 4, nombre: 'Auriculares', precio: 80, stock: 3 }\n]);\n\n// Con clave y valor\nconst monitores = productos2.delete('nombre', 'Monitor');\nconsole.log(monitores[0].id); // 3\nconsole.log(productos2.length); // 3\n\n// Con clave, operador y valor\nconst caros = productos2.delete('precio', '>', 50);\nconsole.log(caros.length); // 1\nconsole.log(productos2.length); // 2\n\n// Con objeto de consulta\nconst resultado = productos2.delete({ stock: { $eq: 0 } });\nconsole.log(resultado.length); // 1\nconsole.log(productos2.length); // 1\n"})}),"\n",(0,i.jsx)(n.h2,{id:"splice",children:"splice"}),"\n",(0,i.jsx)(n.p,{children:"Cambia el contenido de la colecci\xf3n eliminando o reemplazando elementos existentes y/o agregando nuevos elementos."}),"\n",(0,i.jsx)(n.h3,{id:"firma-1",children:"Firma"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"splice(start: number, deleteCount?: number, ...items: T[]): Collection<T>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ejemplo-1",children:"Ejemplo"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const colores = new Collection(['rojo', 'verde', 'azul', 'amarillo']);\n\n// Eliminar elementos\nconst eliminados = colores.splice(1, 2);\nconsole.log(eliminados); // Collection ['verde', 'azul']\nconsole.log(colores); // Collection ['rojo', 'amarillo']\n\n// A\xf1adir elementos sin eliminar\ncolores.splice(1, 0, 'naranja', 'morado');\nconsole.log(colores); // Collection ['rojo', 'naranja', 'morado', 'amarillo']\n\n// Reemplazar elementos\ncolores.splice(2, 1, 'violeta', 'rosa');\nconsole.log(colores); // Collection ['rojo', 'naranja', 'violeta', 'rosa', 'amarillo']\n"})}),"\n",(0,i.jsx)(n.h2,{id:"sort",children:"sort"}),"\n",(0,i.jsx)(n.p,{children:"Ordena los elementos de la colecci\xf3n y devuelve la colecci\xf3n ordenada."}),"\n",(0,i.jsx)(n.h3,{id:"firmas-1",children:"Firmas"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"// Con funci\xf3n de comparaci\xf3n\nsort(compareFn?: (a: T, b: T) => number): this\n\n// Con clave\nsort(key: string): this\n\n// Con clave y direcci\xf3n\nsort(key: string, direction: 'asc' | 'desc'): this\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ejemplos-1",children:"Ejemplos"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const usuarios = new Collection([\n  { id: 3, nombre: 'Elena', edad: 25 },\n  { id: 1, nombre: 'Ana', edad: 28 },\n  { id: 2, nombre: 'Carlos', edad: 34 }\n]);\n\n// Con funci\xf3n de comparaci\xf3n\nusuarios.sort((a, b) => a.id - b.id);\nconsole.log(usuarios.map(u => u.id)); // [1, 2, 3]\n\n// Con clave\nusuarios.sort('nombre');\nconsole.log(usuarios.map(u => u.nombre)); // ['Ana', 'Carlos', 'Elena']\n\n// Con clave y direcci\xf3n\nusuarios.sort('edad', 'desc');\nconsole.log(usuarios.map(u => u.nombre)); // ['Carlos', 'Ana', 'Elena']\n"})}),"\n",(0,i.jsx)(n.h2,{id:"reverse",children:"reverse"}),"\n",(0,i.jsx)(n.p,{children:"Invierte el orden de los elementos en la colecci\xf3n."}),"\n",(0,i.jsx)(n.h3,{id:"firma-2",children:"Firma"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"reverse(): this\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ejemplo-2",children:"Ejemplo"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const numeros = new Collection([1, 2, 3, 4, 5]);\n\nnumeros.reverse();\nconsole.log(numeros); // Collection [5, 4, 3, 2, 1]\n\n// Encadenamiento\nconst letras = new Collection(['a', 'b', 'c', 'd']);\nconst resultado = letras.reverse().map(l => l.toUpperCase());\nconsole.log(resultado); // Collection ['D', 'C', 'B', 'A']\n"})}),"\n",(0,i.jsx)(n.h2,{id:"unique",children:"unique"}),"\n",(0,i.jsx)(n.p,{children:"Elimina elementos duplicados de la colecci\xf3n."}),"\n",(0,i.jsx)(n.h3,{id:"firmas-2",children:"Firmas"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"// Sin argumentos (para tipos primitivos)\nunique(): Collection<T>\n\n// Con clave (para objetos)\nunique<K extends string>(key: K): Collection<T>\n\n// Con funci\xf3n callback\nunique<K>(callback: (item: T, index: number) => K): Collection<T>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ejemplos-2",children:"Ejemplos"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"// Con tipos primitivos\nconst numeros = new Collection([1, 2, 2, 3, 3, 3, 4, 5, 5]);\nconst numerosUnicos = numeros.unique();\nconsole.log(numerosUnicos); // Collection [1, 2, 3, 4, 5]\n\n// Con objetos y clave\nconst usuarios = new Collection([\n  { id: 1, nombre: 'Ana' },\n  { id: 2, nombre: 'Carlos' },\n  { id: 1, nombre: 'Ana (duplicado)' },\n  { id: 3, nombre: 'Elena' }\n]);\n\nconst usuariosUnicos = usuarios.unique('id');\nconsole.log(usuariosUnicos.length); // 3\nconsole.log(usuariosUnicos.map(u => u.nombre)); // ['Ana', 'Carlos', 'Elena']\n\n// Con funci\xf3n callback\nconst productos = new Collection([\n  { id: 1, categor\xeda: 'A', nombre: 'Producto 1' },\n  { id: 2, categor\xeda: 'B', nombre: 'Producto 2' },\n  { id: 3, categor\xeda: 'A', nombre: 'Producto 3' },\n  { id: 4, categor\xeda: 'C', nombre: 'Producto 4' }\n]);\n\nconst porCategoria = productos.unique(p => p.categor\xeda);\nconsole.log(porCategoria.length); // 3\nconsole.log(porCategoria.map(p => p.nombre)); // ['Producto 1', 'Producto 2', 'Producto 4']\n"})}),"\n",(0,i.jsx)(n.h2,{id:"merge",children:"merge"}),"\n",(0,i.jsx)(n.p,{children:"Combina la colecci\xf3n actual con arrays o colecciones adicionales."}),"\n",(0,i.jsx)(n.h3,{id:"firma-3",children:"Firma"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"merge(...items: (T | T[] | Collection<T>)[]): Collection<T>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ejemplo-3",children:"Ejemplo"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const coleccion1 = new Collection([1, 2, 3]);\nconst coleccion2 = new Collection([4, 5]);\nconst array = [6, 7];\nconst elemento = 8;\n\nconst resultado = coleccion1.merge(coleccion2, array, elemento);\nconsole.log(resultado); // Collection [1, 2, 3, 4, 5, 6, 7, 8]\n\n// La colecci\xf3n original no se modifica\nconsole.log(coleccion1); // Collection [1, 2, 3]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"concat",children:"concat"}),"\n",(0,i.jsx)(n.p,{children:"Concatena la colecci\xf3n actual con arrays o colecciones adicionales."}),"\n",(0,i.jsx)(n.h3,{id:"firma-4",children:"Firma"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"concat(...items: (T | ConcatArray<T>)[]): Collection<T>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ejemplo-4",children:"Ejemplo"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const coleccion1 = new Collection(['a', 'b', 'c']);\nconst coleccion2 = new Collection(['d', 'e']);\nconst array = ['f', 'g'];\n\nconst resultado = coleccion1.concat(coleccion2, array);\nconsole.log(resultado); // Collection ['a', 'b', 'c', 'd', 'e', 'f', 'g']\n\n// La colecci\xf3n original no se modifica\nconsole.log(coleccion1); // Collection ['a', 'b', 'c']\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"Diferencia entre merge y concat",type:"note",children:(0,i.jsxs)(n.p,{children:["Aunque ",(0,i.jsx)(n.code,{children:"merge"})," y ",(0,i.jsx)(n.code,{children:"concat"})," parecen similares, ",(0,i.jsx)(n.code,{children:"merge"})," es m\xe1s flexible y puede manejar elementos individuales directamente, mientras que ",(0,i.jsx)(n.code,{children:"concat"})," sigue el comportamiento est\xe1ndar de Array."]})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>a});var l=o(6540);const i={},s=l.createContext(i);function c(e){const n=l.useContext(s);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);