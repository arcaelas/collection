"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3356],{2872:(o,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"casos-uso","title":"Casos de uso","description":"Esta secci\xf3n presenta ejemplos pr\xe1cticos de c\xf3mo utilizar Arcaelas Collection en diferentes escenarios.","source":"@site/docs/casos-uso.md","sourceDirName":".","slug":"/casos-uso","permalink":"/docs/casos-uso","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"Utilidades","permalink":"/docs/api/utilidades"}}');var s=n(4848),t=n(8453);const r={sidebar_position:3},i="Casos de uso",c={},d=[{value:"Gesti\xf3n de productos",id:"gesti\xf3n-de-productos",level:2},{value:"An\xe1lisis de datos de usuarios",id:"an\xe1lisis-de-datos-de-usuarios",level:2},{value:"Manipulaci\xf3n de datos JSON",id:"manipulaci\xf3n-de-datos-json",level:2},{value:"Gesti\xf3n de tareas",id:"gesti\xf3n-de-tareas",level:2}];function l(o){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...o.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"casos-de-uso",children:"Casos de uso"})}),"\n",(0,s.jsx)(e.p,{children:"Esta secci\xf3n presenta ejemplos pr\xe1cticos de c\xf3mo utilizar Arcaelas Collection en diferentes escenarios."}),"\n",(0,s.jsx)(e.h2,{id:"gesti\xf3n-de-productos",children:"Gesti\xf3n de productos"}),"\n",(0,s.jsx)(e.p,{children:"Ejemplo de gesti\xf3n de un cat\xe1logo de productos con operaciones comunes."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"import { Collection } from '@arcaelas/collection';\n\ninterface Producto {\n  id: number;\n  nombre: string;\n  precio: number;\n  categor\xeda: string;\n  stock: number;\n  activo: boolean;\n}\n\n// Crear cat\xe1logo de productos\nconst catalogo = new Collection<Producto>([\n  { id: 1, nombre: 'Mouse inal\xe1mbrico', precio: 25, categor\xeda: 'perif\xe9ricos', stock: 10, activo: true },\n  { id: 2, nombre: 'Teclado mec\xe1nico', precio: 60, categor\xeda: 'perif\xe9ricos', stock: 5, activo: true },\n  { id: 3, nombre: 'Monitor 24\"', precio: 150, categor\xeda: 'pantallas', stock: 3, activo: true },\n  { id: 4, nombre: 'Auriculares Bluetooth', precio: 45, categor\xeda: 'audio', stock: 0, activo: false },\n  { id: 5, nombre: 'Webcam HD', precio: 35, categor\xeda: 'perif\xe9ricos', stock: 7, activo: true },\n  { id: 6, nombre: 'Disco SSD 500GB', precio: 80, categor\xeda: 'almacenamiento', stock: 12, activo: true },\n]);\n\n// Productos disponibles (con stock y activos)\nconst disponibles = catalogo\n  .where('stock', '>', 0)\n  .where('activo', true);\n\nconsole.log(`Productos disponibles: ${disponibles.length}`); // 5\n\n// Agrupar por categor\xeda\nconst porCategor\xeda = disponibles.groupBy('categor\xeda');\nconsole.log(`Categor\xedas disponibles: ${Object.keys(porCategor\xeda).length}`); // 3\n\n// Productos por rango de precio\nconst econ\xf3micos = catalogo.where('precio', '<', 50).where('stock', '>', 0);\nconst intermedios = catalogo.where('precio', '>=', 50).where('precio', '<', 100).where('stock', '>', 0);\nconst premium = catalogo.where('precio', '>=', 100).where('stock', '>', 0);\n\nconsole.log(`Productos econ\xf3micos: ${econ\xf3micos.length}`); // 2\nconsole.log(`Productos intermedios: ${intermedios.length}`); // 2\nconsole.log(`Productos premium: ${premium.length}`); // 1\n\n// Producto m\xe1s caro y m\xe1s barato\nconst masCaro = catalogo.max('precio');\nconst masBarato = catalogo.min('precio');\n\nconsole.log(`Producto m\xe1s caro: ${masCaro} (${catalogo.first('precio', masCaro)?.nombre})`);\nconsole.log(`Producto m\xe1s barato: ${masBarato} (${catalogo.first('precio', masBarato)?.nombre})`);\n\n// Precio promedio\nconst precioPromedio = catalogo.avg('precio');\nconsole.log(`Precio promedio: $${precioPromedio.toFixed(2)}`); // $65.83\n\n// Valor total del inventario\nconst valorInventario = catalogo\n  .where('stock', '>', 0)\n  .sum(p => p.precio * p.stock);\n\nconsole.log(`Valor total del inventario: $${valorInventario}`); // $1785\n\n// Actualizar precios (10% de descuento en perif\xe9ricos)\nconst perifericos = catalogo.where('categor\xeda', 'perif\xe9ricos');\nperifericos.each(p => {\n  p.precio = Math.round(p.precio * 0.9);\n});\n\nconsole.log('Precios actualizados:');\nperifericos.each(p => {\n  console.log(`${p.nombre}: $${p.precio}`);\n});\n"})}),"\n",(0,s.jsx)(e.h2,{id:"an\xe1lisis-de-datos-de-usuarios",children:"An\xe1lisis de datos de usuarios"}),"\n",(0,s.jsx)(e.p,{children:"Ejemplo de an\xe1lisis de datos de usuarios para obtener estad\xedsticas y segmentaci\xf3n."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"import { Collection } from '@arcaelas/collection';\n\ninterface Usuario {\n  id: number;\n  nombre: string;\n  edad: number;\n  pa\xeds: string;\n  fechaRegistro: Date;\n  ultimoAcceso: Date | null;\n  compras: number;\n  gastoTotal: number;\n}\n\n// Crear colecci\xf3n de usuarios\nconst usuarios = new Collection<Usuario>([\n  { \n    id: 1, \n    nombre: 'Ana Garc\xeda', \n    edad: 28, \n    pa\xeds: 'Espa\xf1a', \n    fechaRegistro: new Date('2023-01-15'), \n    ultimoAcceso: new Date('2023-06-20'), \n    compras: 5, \n    gastoTotal: 320 \n  },\n  { \n    id: 2, \n    nombre: 'Carlos Rodr\xedguez', \n    edad: 34, \n    pa\xeds: 'M\xe9xico', \n    fechaRegistro: new Date('2022-11-05'), \n    ultimoAcceso: new Date('2023-06-18'), \n    compras: 12, \n    gastoTotal: 840 \n  },\n  { \n    id: 3, \n    nombre: 'Elena Mart\xednez', \n    edad: 22, \n    pa\xeds: 'Argentina', \n    fechaRegistro: new Date('2023-03-28'), \n    ultimoAcceso: null, \n    compras: 1, \n    gastoTotal: 50 \n  },\n  { \n    id: 4, \n    nombre: 'David L\xf3pez', \n    edad: 45, \n    pa\xeds: 'Espa\xf1a', \n    fechaRegistro: new Date('2022-08-12'), \n    ultimoAcceso: new Date('2023-06-15'), \n    compras: 8, \n    gastoTotal: 620 \n  },\n  { \n    id: 5, \n    nombre: 'Mar\xeda Fern\xe1ndez', \n    edad: 31, \n    pa\xeds: 'Colombia', \n    fechaRegistro: new Date('2023-02-20'), \n    ultimoAcceso: new Date('2023-06-19'), \n    compras: 3, \n    gastoTotal: 180 \n  },\n]);\n\n// Usuarios activos (con acceso en el \xfaltimo mes)\nconst hoy = new Date();\nconst unMesAtras = new Date(hoy.getFullYear(), hoy.getMonth() - 1, hoy.getDate());\n\nconst usuariosActivos = usuarios.filter(u => \n  u.ultimoAcceso !== null && u.ultimoAcceso > unMesAtras\n);\n\nconsole.log(`Usuarios activos en el \xfaltimo mes: ${usuariosActivos.length}`); // 4\n\n// Agrupar por pa\xeds\nconst porPa\xeds = usuarios.groupBy('pa\xeds');\nconsole.log('Usuarios por pa\xeds:');\nObject.entries(porPa\xeds).forEach(([pa\xeds, usuarios]) => {\n  console.log(`${pa\xeds}: ${usuarios.length}`);\n});\n\n// Segmentaci\xf3n por edad\nconst [j\xf3venes, adultos] = usuarios.partition(u => u.edad < 30);\nconsole.log(`Usuarios j\xf3venes (<30): ${j\xf3venes.length}`); // 2\nconsole.log(`Usuarios adultos (\u226530): ${adultos.length}`); // 3\n\n// Estad\xedsticas de compras\nconst estad\xedsticas = {\n  totalCompras: usuarios.sum('compras'),\n  promedioCompras: usuarios.avg('compras'),\n  gastoTotal: usuarios.sum('gastoTotal'),\n  gastoPromedio: usuarios.avg('gastoTotal'),\n  gastoPromedioPorCompra: usuarios.sum('gastoTotal') / usuarios.sum('compras')\n};\n\nconsole.log('Estad\xedsticas de compras:');\nconsole.log(`Total de compras: ${estad\xedsticas.totalCompras}`); // 29\nconsole.log(`Promedio de compras por usuario: ${estad\xedsticas.promedioCompras.toFixed(1)}`); // 5.8\nconsole.log(`Gasto total: $${estad\xedsticas.gastoTotal}`); // $2010\nconsole.log(`Gasto promedio por usuario: $${estad\xedsticas.gastoPromedio.toFixed(2)}`); // $402.00\nconsole.log(`Gasto promedio por compra: $${estad\xedsticas.gastoPromedioPorCompra.toFixed(2)}`); // $69.31\n\n// Usuarios de alto valor (m\xe1s de 5 compras y gasto superior a $500)\nconst usuariosValiosos = usuarios.filter(u => \n  u.compras > 5 && u.gastoTotal > 500\n);\n\nconsole.log('Usuarios de alto valor:');\nusuariosValiosos.each(u => {\n  console.log(`${u.nombre} - ${u.compras} compras - $${u.gastoTotal}`);\n});\n\n// Ordenar por gasto total (descendente)\nconst topGastadores = usuarios\n  .sort('gastoTotal', 'desc')\n  .map(u => ({\n    nombre: u.nombre,\n    gastoTotal: u.gastoTotal,\n    compras: u.compras,\n    promedioGasto: Math.round(u.gastoTotal / u.compras)\n  }));\n\nconsole.log('Top gastadores:');\ntopGastadores.each(u => {\n  console.log(`${u.nombre} - $${u.gastoTotal} (promedio: $${u.promedioGasto} por compra)`);\n});\n"})}),"\n",(0,s.jsx)(e.h2,{id:"manipulaci\xf3n-de-datos-json",children:"Manipulaci\xf3n de datos JSON"}),"\n",(0,s.jsx)(e.p,{children:"Ejemplo de procesamiento de datos JSON obtenidos de una API."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"import { Collection } from '@arcaelas/collection';\n\n// Simular datos de una API\nconst datosAPI = [\n  { id: 'post_1', t\xedtulo: 'Introducci\xf3n a TypeScript', autor: 'user_1', etiquetas: ['typescript', 'javascript', 'programaci\xf3n'], comentarios: 12, likes: 45 },\n  { id: 'post_2', t\xedtulo: 'Patrones de dise\xf1o en JavaScript', autor: 'user_2', etiquetas: ['javascript', 'patrones', 'arquitectura'], comentarios: 8, likes: 32 },\n  { id: 'post_3', t\xedtulo: 'React vs Angular', autor: 'user_1', etiquetas: ['react', 'angular', 'frontend'], comentarios: 24, likes: 56 },\n  { id: 'post_4', t\xedtulo: 'Optimizaci\xf3n de rendimiento web', autor: 'user_3', etiquetas: ['rendimiento', 'web', 'frontend'], comentarios: 5, likes: 18 },\n  { id: 'post_5', t\xedtulo: 'TypeScript avanzado', autor: 'user_2', etiquetas: ['typescript', 'avanzado'], comentarios: 15, likes: 38 },\n];\n\n// Crear colecci\xf3n a partir de los datos\nconst posts = new Collection(datosAPI);\n\n// Indexar por ID para acceso r\xe1pido\nconst postsIndexados = posts.keyBy('id');\nconsole.log(postsIndexados.post_3.t\xedtulo); // 'React vs Angular'\n\n// Encontrar posts populares (m\xe1s de 10 comentarios y 30 likes)\nconst postsPopulares = posts.filter(p => \n  p.comentarios > 10 && p.likes > 30\n);\n\nconsole.log(`Posts populares: ${postsPopulares.length}`); // 3\n\n// Agrupar por autor\nconst postsPorAutor = posts.groupBy('autor');\nconsole.log('Posts por autor:');\nObject.entries(postsPorAutor).forEach(([autor, posts]) => {\n  console.log(`${autor}: ${posts.length}`);\n});\n\n// Encontrar todas las etiquetas \xfanicas\nconst todasEtiquetas = posts\n  .map(p => p.etiquetas)\n  .reduce((todas, etiquetas) => {\n    return todas.concat(etiquetas);\n  }, [])\n  .unique();\n\nconsole.log('Etiquetas \xfanicas:', todasEtiquetas);\n\n// Contar posts por etiqueta\nconst conteoEtiquetas = {};\nposts.each(post => {\n  post.etiquetas.forEach(etiqueta => {\n    conteoEtiquetas[etiqueta] = (conteoEtiquetas[etiqueta] || 0) + 1;\n  });\n});\n\nconsole.log('Conteo de posts por etiqueta:');\nconsole.log(conteoEtiquetas);\n\n// Transformar datos para una API\nconst datosTransformados = posts.map(p => ({\n  id: p.id,\n  t\xedtulo: p.t\xedtulo,\n  autor: p.autor,\n  popularidad: p.likes + (p.comentarios * 2), // f\xf3rmula de popularidad\n  etiquetasPrincipales: p.etiquetas.slice(0, 2)\n}));\n\nconsole.log('Datos transformados para API:');\nconsole.log(datosTransformados.toArray());\n"})}),"\n",(0,s.jsx)(e.h2,{id:"gesti\xf3n-de-tareas",children:"Gesti\xf3n de tareas"}),"\n",(0,s.jsx)(e.p,{children:"Ejemplo de una aplicaci\xf3n de gesti\xf3n de tareas con filtrado y agrupaci\xf3n."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"import { Collection } from '@arcaelas/collection';\n\ninterface Tarea {\n  id: number;\n  t\xedtulo: string;\n  descripci\xf3n: string;\n  estado: 'pendiente' | 'en_progreso' | 'completada' | 'cancelada';\n  prioridad: 'baja' | 'media' | 'alta' | 'urgente';\n  fechaCreaci\xf3n: Date;\n  fechaVencimiento: Date | null;\n  etiquetas: string[];\n  asignadoA: string | null;\n}\n\n// Crear colecci\xf3n de tareas\nconst tareas = new Collection<Tarea>([\n  {\n    id: 1,\n    t\xedtulo: 'Dise\xf1ar p\xe1gina de inicio',\n    descripci\xf3n: 'Crear mockups para la nueva p\xe1gina de inicio',\n    estado: 'completada',\n    prioridad: 'alta',\n    fechaCreaci\xf3n: new Date('2023-06-01'),\n    fechaVencimiento: new Date('2023-06-10'),\n    etiquetas: ['dise\xf1o', 'frontend'],\n    asignadoA: 'ana'\n  },\n  {\n    id: 2,\n    t\xedtulo: 'Implementar autenticaci\xf3n',\n    descripci\xf3n: 'Integrar sistema de login con OAuth',\n    estado: 'en_progreso',\n    prioridad: 'urgente',\n    fechaCreaci\xf3n: new Date('2023-06-05'),\n    fechaVencimiento: new Date('2023-06-15'),\n    etiquetas: ['backend', 'seguridad'],\n    asignadoA: 'carlos'\n  },\n  {\n    id: 3,\n    t\xedtulo: 'Optimizar consultas SQL',\n    descripci\xf3n: 'Mejorar rendimiento de consultas principales',\n    estado: 'pendiente',\n    prioridad: 'media',\n    fechaCreaci\xf3n: new Date('2023-06-08'),\n    fechaVencimiento: new Date('2023-06-20'),\n    etiquetas: ['backend', 'base de datos', 'rendimiento'],\n    asignadoA: 'elena'\n  },\n  {\n    id: 4,\n    t\xedtulo: 'Corregir bugs de UI',\n    descripci\xf3n: 'Resolver problemas reportados en formularios',\n    estado: 'pendiente',\n    prioridad: 'alta',\n    fechaCreaci\xf3n: new Date('2023-06-10'),\n    fechaVencimiento: new Date('2023-06-12'),\n    etiquetas: ['frontend', 'bugs'],\n    asignadoA: 'ana'\n  },\n  {\n    id: 5,\n    t\xedtulo: 'Actualizar documentaci\xf3n',\n    descripci\xf3n: 'Actualizar gu\xeda de API para desarrolladores',\n    estado: 'pendiente',\n    prioridad: 'baja',\n    fechaCreaci\xf3n: new Date('2023-06-12'),\n    fechaVencimiento: null,\n    etiquetas: ['documentaci\xf3n'],\n    asignadoA: null\n  },\n]);\n\n// Tareas pendientes ordenadas por prioridad\nconst prioridadOrden = { 'urgente': 0, 'alta': 1, 'media': 2, 'baja': 3 };\nconst pendientes = tareas\n  .where('estado', 'pendiente')\n  .sort((a, b) => prioridadOrden[a.prioridad] - prioridadOrden[b.prioridad]);\n\nconsole.log('Tareas pendientes por prioridad:');\npendientes.each(t => {\n  console.log(`[${t.prioridad.toUpperCase()}] ${t.t\xedtulo}`);\n});\n\n// Tareas vencidas\nconst hoy = new Date();\nconst vencidas = tareas.filter(t => \n  t.estado !== 'completada' && \n  t.estado !== 'cancelada' && \n  t.fechaVencimiento !== null && \n  t.fechaVencimiento < hoy\n);\n\nconsole.log(`Tareas vencidas: ${vencidas.length}`);\n\n// Agrupar por estado\nconst porEstado = tareas.groupBy('estado');\nconsole.log('Tareas por estado:');\nObject.entries(porEstado).forEach(([estado, tareas]) => {\n  console.log(`${estado}: ${tareas.length}`);\n});\n\n// Tareas por persona\nconst porPersona = tareas\n  .where('asignadoA', '!=', null)\n  .groupBy('asignadoA');\n\nconsole.log('Carga de trabajo por persona:');\nObject.entries(porPersona).forEach(([persona, tareas]) => {\n  const pendientes = tareas.filter(t => t.estado !== 'completada' && t.estado !== 'cancelada').length;\n  console.log(`${persona}: ${pendientes} pendientes de ${tareas.length} totales`);\n});\n\n// Estad\xedsticas de etiquetas\nconst etiquetasUnicas = tareas\n  .map(t => t.etiquetas)\n  .reduce((todas, etiquetas) => todas.concat(etiquetas), [])\n  .unique();\n\nconst conteoEtiquetas = {};\ntareas.each(tarea => {\n  tarea.etiquetas.forEach(etiqueta => {\n    conteoEtiquetas[etiqueta] = (conteoEtiquetas[etiqueta] || 0) + 1;\n  });\n});\n\nconsole.log('Distribuci\xf3n de etiquetas:');\nconsole.log(conteoEtiquetas);\n\n// Buscar tareas con m\xfaltiples criterios\nconst busquedaAvanzada = tareas.filter(t => \n  (t.estado === 'pendiente' || t.estado === 'en_progreso') &&\n  (t.prioridad === 'alta' || t.prioridad === 'urgente') &&\n  (t.etiquetas.includes('frontend') || t.etiquetas.includes('backend'))\n);\n\nconsole.log('Resultados de b\xfasqueda avanzada:');\nbusquedaAvanzada.each(t => {\n  console.log(`${t.t\xedtulo} [${t.estado}] [${t.prioridad}]`);\n});\n"})})]})}function u(o={}){const{wrapper:e}={...(0,t.R)(),...o.components};return e?(0,s.jsx)(e,{...o,children:(0,s.jsx)(l,{...o})}):l(o)}},8453:(o,e,n)=>{n.d(e,{R:()=>r,x:()=>i});var a=n(6540);const s={},t=a.createContext(s);function r(o){const e=a.useContext(t);return a.useMemo(function(){return"function"==typeof o?o(e):{...e,...o}},[e,o])}function i(o){let e;return e=o.disableParentContext?"function"==typeof o.components?o.components(s):o.components||s:r(o.components),a.createElement(t.Provider,{value:e},o.children)}}}]);