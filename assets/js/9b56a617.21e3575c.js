"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5110],{541:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"api/utilidades","title":"Utilidades","description":"Esta secci\xf3n documenta los m\xe9todos de utilidad de Arcaelas Collection.","source":"@site/docs/api/utilidades.md","sourceDirName":"api","slug":"/api/utilidades","permalink":"/docs/api/utilidades","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"docsSidebar","previous":{"title":"Manipulaci\xf3n de elementos","permalink":"/docs/api/manipulacion-elementos"},"next":{"title":"Casos de uso","permalink":"/docs/casos-uso"}}');var a=o(4848),i=o(8453);const s={sidebar_position:6},c="Utilidades",r={},d=[{value:"isEmpty",id:"isempty",level:2},{value:"Firma",id:"firma",level:3},{value:"Ejemplo",id:"ejemplo",level:3},{value:"isNotEmpty",id:"isnotempty",level:2},{value:"Firma",id:"firma-1",level:3},{value:"Ejemplo",id:"ejemplo-1",level:3},{value:"toArray",id:"toarray",level:2},{value:"Firma",id:"firma-2",level:3},{value:"Ejemplo",id:"ejemplo-2",level:3},{value:"toJSON",id:"tojson",level:2},{value:"Firma",id:"firma-3",level:3},{value:"Ejemplo",id:"ejemplo-3",level:3},{value:"clone",id:"clone",level:2},{value:"Firma",id:"firma-4",level:3},{value:"Ejemplo",id:"ejemplo-4",level:3},{value:"random",id:"random",level:2},{value:"Firma",id:"firma-5",level:3},{value:"Ejemplo",id:"ejemplo-5",level:3},{value:"shuffle",id:"shuffle",level:2},{value:"Firma",id:"firma-6",level:3},{value:"Ejemplo",id:"ejemplo-6",level:3},{value:"sum",id:"sum",level:2},{value:"Firmas",id:"firmas",level:3},{value:"Ejemplos",id:"ejemplos",level:3},{value:"avg",id:"avg",level:2},{value:"Firmas",id:"firmas-1",level:3},{value:"Ejemplos",id:"ejemplos-1",level:3},{value:"min",id:"min",level:2},{value:"Firmas",id:"firmas-2",level:3},{value:"Ejemplos",id:"ejemplos-2",level:3},{value:"max",id:"max",level:2},{value:"Firmas",id:"firmas-3",level:3},{value:"Ejemplos",id:"ejemplos-3",level:3}];function t(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"utilidades",children:"Utilidades"})}),"\n",(0,a.jsx)(n.p,{children:"Esta secci\xf3n documenta los m\xe9todos de utilidad de Arcaelas Collection."}),"\n",(0,a.jsx)(n.h2,{id:"isempty",children:"isEmpty"}),"\n",(0,a.jsx)(n.p,{children:"Verifica si la colecci\xf3n est\xe1 vac\xeda."}),"\n",(0,a.jsx)(n.h3,{id:"firma",children:"Firma"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"isEmpty(): boolean\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo",children:"Ejemplo"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const vacia = new Collection();\nconsole.log(vacia.isEmpty()); // true\n\nconst noVacia = new Collection([1, 2, 3]);\nconsole.log(noVacia.isEmpty()); // false\n\n// Encadenamiento\nconst resultado = new Collection([1, 2, 3])\n  .where('$value', '>', 5)\n  .isEmpty();\nconsole.log(resultado); // true\n"})}),"\n",(0,a.jsx)(n.h2,{id:"isnotempty",children:"isNotEmpty"}),"\n",(0,a.jsx)(n.p,{children:"Verifica si la colecci\xf3n no est\xe1 vac\xeda."}),"\n",(0,a.jsx)(n.h3,{id:"firma-1",children:"Firma"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"isNotEmpty(): boolean\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo-1",children:"Ejemplo"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const vacia = new Collection();\nconsole.log(vacia.isNotEmpty()); // false\n\nconst noVacia = new Collection([1, 2, 3]);\nconsole.log(noVacia.isNotEmpty()); // true\n\n// Encadenamiento con filtrado\nconst tieneElementosValidos = new Collection([1, 2, 3, 4])\n  .where('$value', '>', 3)\n  .isNotEmpty();\nconsole.log(tieneElementosValidos); // true\n"})}),"\n",(0,a.jsx)(n.h2,{id:"toarray",children:"toArray"}),"\n",(0,a.jsx)(n.p,{children:"Convierte la colecci\xf3n a un array nativo."}),"\n",(0,a.jsx)(n.h3,{id:"firma-2",children:"Firma"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"toArray(): T[]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo-2",children:"Ejemplo"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const coleccion = new Collection(['a', 'b', 'c']);\nconst array = coleccion.toArray();\n\nconsole.log(array); // ['a', 'b', 'c']\nconsole.log(Array.isArray(array)); // true\nconsole.log(array instanceof Collection); // false\n\n// \xdatil para interoperar con APIs que esperan arrays nativos\nconst api = {\n  procesarDatos(datos: string[]) {\n    return datos.join('-');\n  }\n};\n\nconst resultado = api.procesarDatos(coleccion.toArray());\nconsole.log(resultado); // 'a-b-c'\n"})}),"\n",(0,a.jsx)(n.h2,{id:"tojson",children:"toJSON"}),"\n",(0,a.jsx)(n.p,{children:"Serializa la colecci\xf3n a formato JSON."}),"\n",(0,a.jsx)(n.h3,{id:"firma-3",children:"Firma"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"toJSON(): T[]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo-3",children:"Ejemplo"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:'const usuarios = new Collection([\n  { id: 1, nombre: \'Ana\' },\n  { id: 2, nombre: \'Carlos\' }\n]);\n\nconst json = JSON.stringify(usuarios);\nconsole.log(json); // \'[{"id":1,"nombre":"Ana"},{"id":2,"nombre":"Carlos"}]\'\n\n// Deserializar\nconst parsed = JSON.parse(json);\nconsole.log(parsed); // [{"id":1,"nombre":"Ana"},{"id":2,"nombre":"Carlos"}]\n\n// Crear nueva colecci\xf3n desde JSON\nconst nuevaColeccion = new Collection(parsed);\nconsole.log(nuevaColeccion.length); // 2\n'})}),"\n",(0,a.jsx)(n.h2,{id:"clone",children:"clone"}),"\n",(0,a.jsx)(n.p,{children:"Crea una copia superficial de la colecci\xf3n."}),"\n",(0,a.jsx)(n.h3,{id:"firma-4",children:"Firma"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"clone(): Collection<T>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo-4",children:"Ejemplo"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const original = new Collection([1, 2, 3]);\nconst copia = original.clone();\n\n// Las colecciones son distintas instancias\nconsole.log(copia === original); // false\n\n// Pero contienen los mismos elementos\nconsole.log(copia.length === original.length); // true\nconsole.log(copia[0] === original[0]); // true\n\n// Modificar la copia no afecta al original\ncopia.push(4);\nconsole.log(copia.length); // 4\nconsole.log(original.length); // 3\n"})}),"\n",(0,a.jsx)(n.admonition,{title:"Copia superficial",type:"caution",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"clone()"})," realiza una copia superficial, lo que significa que los objetos dentro de la colecci\xf3n siguen siendo referencias a los objetos originales."]})}),"\n",(0,a.jsx)(n.h2,{id:"random",children:"random"}),"\n",(0,a.jsx)(n.p,{children:"Obtiene un elemento aleatorio de la colecci\xf3n."}),"\n",(0,a.jsx)(n.h3,{id:"firma-5",children:"Firma"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"random(): T | undefined\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo-5",children:"Ejemplo"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const colores = new Collection(['rojo', 'verde', 'azul', 'amarillo', 'morado']);\n\nconst colorAleatorio = colores.random();\nconsole.log(colorAleatorio); // Un color aleatorio de la colecci\xf3n\n\n// \xdatil para selecciones aleatorias\nconst usuarios = new Collection([\n  { id: 1, nombre: 'Ana' },\n  { id: 2, nombre: 'Carlos' },\n  { id: 3, nombre: 'Elena' },\n  { id: 4, nombre: 'David' }\n]);\n\nconst ganador = usuarios.random();\nconsole.log(`El ganador es: ${ganador?.nombre}`);\n"})}),"\n",(0,a.jsx)(n.h2,{id:"shuffle",children:"shuffle"}),"\n",(0,a.jsx)(n.p,{children:"Mezcla aleatoriamente los elementos de la colecci\xf3n."}),"\n",(0,a.jsx)(n.h3,{id:"firma-6",children:"Firma"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"shuffle(): this\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo-6",children:"Ejemplo"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const numeros = new Collection([1, 2, 3, 4, 5]);\n\nnumeros.shuffle();\nconsole.log(numeros); // Orden aleatorio, por ejemplo: [3, 1, 5, 2, 4]\n\n// \xdatil para crear secuencias aleatorias\nconst cartas = new Collection(['A\u2660', 'K\u2660', 'Q\u2660', 'J\u2660', '10\u2660', '9\u2660', '8\u2660']);\ncartas.shuffle();\nconsole.log(cartas); // Orden aleatorio\n"})}),"\n",(0,a.jsx)(n.h2,{id:"sum",children:"sum"}),"\n",(0,a.jsx)(n.p,{children:"Calcula la suma de los valores de la colecci\xf3n."}),"\n",(0,a.jsx)(n.h3,{id:"firmas",children:"Firmas"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Para colecciones de n\xfameros\nsum(): number\n\n// Para colecciones de objetos, con clave\nsum(key: string): number\n\n// Para colecciones de objetos, con funci\xf3n callback\nsum(callback: (item: T, index: number) => number): number\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ejemplos",children:"Ejemplos"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Con n\xfameros\nconst numeros = new Collection([1, 2, 3, 4, 5]);\nconsole.log(numeros.sum()); // 15\n\n// Con objetos y clave\nconst productos = new Collection([\n  { id: 1, nombre: 'Mouse', precio: 20 },\n  { id: 2, nombre: 'Teclado', precio: 50 },\n  { id: 3, nombre: 'Monitor', precio: 200 }\n]);\n\nconsole.log(productos.sum('precio')); // 270\n\n// Con funci\xf3n callback\nconst usuarios = new Collection([\n  { id: 1, nombre: 'Ana', compras: [100, 50, 25] },\n  { id: 2, nombre: 'Carlos', compras: [200, 300] },\n  { id: 3, nombre: 'Elena', compras: [75, 125, 50, 50] }\n]);\n\nconst totalCompras = usuarios.sum(u => u.compras.reduce((sum, c) => sum + c, 0));\nconsole.log(totalCompras); // 975\n"})}),"\n",(0,a.jsx)(n.h2,{id:"avg",children:"avg"}),"\n",(0,a.jsx)(n.p,{children:"Calcula el promedio de los valores de la colecci\xf3n."}),"\n",(0,a.jsx)(n.h3,{id:"firmas-1",children:"Firmas"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Para colecciones de n\xfameros\navg(): number\n\n// Para colecciones de objetos, con clave\navg(key: string): number\n\n// Para colecciones de objetos, con funci\xf3n callback\navg(callback: (item: T, index: number) => number): number\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ejemplos-1",children:"Ejemplos"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Con n\xfameros\nconst calificaciones = new Collection([85, 90, 78, 92, 88]);\nconsole.log(calificaciones.avg()); // 86.6\n\n// Con objetos y clave\nconst productos = new Collection([\n  { id: 1, nombre: 'Mouse', precio: 20 },\n  { id: 2, nombre: 'Teclado', precio: 50 },\n  { id: 3, nombre: 'Monitor', precio: 200 }\n]);\n\nconsole.log(productos.avg('precio')); // 90\n\n// Con funci\xf3n callback\nconst estudiantes = new Collection([\n  { id: 1, nombre: 'Ana', notas: [85, 90, 78] },\n  { id: 2, nombre: 'Carlos', notas: [92, 88, 95] },\n  { id: 3, nombre: 'Elena', notas: [75, 80, 85] }\n]);\n\n// Promedio de los promedios individuales\nconst promedioClase = estudiantes.avg(e => {\n  const sumaNotas = e.notas.reduce((sum, nota) => sum + nota, 0);\n  return sumaNotas / e.notas.length;\n});\n\nconsole.log(promedioClase); // 85.33...\n"})}),"\n",(0,a.jsx)(n.h2,{id:"min",children:"min"}),"\n",(0,a.jsx)(n.p,{children:"Encuentra el valor m\xednimo en la colecci\xf3n."}),"\n",(0,a.jsx)(n.h3,{id:"firmas-2",children:"Firmas"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Para colecciones de n\xfameros\nmin(): number | undefined\n\n// Para colecciones de objetos, con clave\nmin<K extends string>(key: K): T[K] | undefined\n\n// Para colecciones de objetos, con funci\xf3n callback\nmin<U>(callback: (item: T, index: number) => U): U | undefined\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ejemplos-2",children:"Ejemplos"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Con n\xfameros\nconst numeros = new Collection([5, 3, 9, 1, 7]);\nconsole.log(numeros.min()); // 1\n\n// Con objetos y clave\nconst productos = new Collection([\n  { id: 1, nombre: 'Mouse', precio: 20 },\n  { id: 2, nombre: 'Teclado', precio: 50 },\n  { id: 3, nombre: 'Monitor', precio: 200 }\n]);\n\nconsole.log(productos.min('precio')); // 20\n\n// Con funci\xf3n callback\nconst estudiantes = new Collection([\n  { id: 1, nombre: 'Ana', edad: 22, promedio: 8.5 },\n  { id: 2, nombre: 'Carlos', edad: 25, promedio: 9.2 },\n  { id: 3, nombre: 'Elena', edad: 21, promedio: 7.8 }\n]);\n\nconst menorPromedio = estudiantes.min(e => e.promedio);\nconsole.log(menorPromedio); // 7.8\n"})}),"\n",(0,a.jsx)(n.h2,{id:"max",children:"max"}),"\n",(0,a.jsx)(n.p,{children:"Encuentra el valor m\xe1ximo en la colecci\xf3n."}),"\n",(0,a.jsx)(n.h3,{id:"firmas-3",children:"Firmas"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Para colecciones de n\xfameros\nmax(): number | undefined\n\n// Para colecciones de objetos, con clave\nmax<K extends string>(key: K): T[K] | undefined\n\n// Para colecciones de objetos, con funci\xf3n callback\nmax<U>(callback: (item: T, index: number) => U): U | undefined\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ejemplos-3",children:"Ejemplos"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Con n\xfameros\nconst numeros = new Collection([5, 3, 9, 1, 7]);\nconsole.log(numeros.max()); // 9\n\n// Con objetos y clave\nconst productos = new Collection([\n  { id: 1, nombre: 'Mouse', precio: 20 },\n  { id: 2, nombre: 'Teclado', precio: 50 },\n  { id: 3, nombre: 'Monitor', precio: 200 }\n]);\n\nconsole.log(productos.max('precio')); // 200\n\n// Con funci\xf3n callback\nconst estudiantes = new Collection([\n  { id: 1, nombre: 'Ana', edad: 22, promedio: 8.5 },\n  { id: 2, nombre: 'Carlos', edad: 25, promedio: 9.2 },\n  { id: 3, nombre: 'Elena', edad: 21, promedio: 7.8 }\n]);\n\nconst mayorEdad = estudiantes.max(e => e.edad);\nconsole.log(mayorEdad); // 25\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>c});var l=o(6540);const a={},i=l.createContext(a);function s(e){const n=l.useContext(i);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);