#!/bin/sh
# Hook de pre-push para compilar y publicar la documentación en la rama docs
# Este hook se ejecuta antes de hacer push a cualquier rama
# Autor: Miguel Alejandro
# Fecha: 2025-06-26

# Configuración
set -e  # Detener en caso de error

# Colores para mensajes
ROJO='\033[0;31m'
VERDE='\033[0;32m'
AMARILLO='\033[0;33m'
AZUL='\033[0;34m'
RESET='\033[0m'

# Función para mostrar mensajes de error
error() {
  echo -e "${ROJO}[ERROR] $1${RESET}" >&2
  exit 1
}

# Función para mostrar información
info() {
  echo -e "${AZUL}[INFO] $1${RESET}"
}

# Función para mostrar éxito
success() {
  echo -e "${VERDE}[OK] $1${RESET}"
}

# Función para mostrar advertencia
warning() {
  echo -e "${AMARILLO}[ADVERTENCIA] $1${RESET}"
}

BRANCH=$(git branch --show-current)
DOCS="docs"

if [ "$BRANCH" != "main" ]; then
  info "Solo se puede hacer push desde la rama main."
elif git diff --name-only HEAD@{1} HEAD 2>/dev/null | grep "^docs/" || false; then
  yarn docs:build
  git checkout "${DOCS}" --
  git branch --set-upstream-to=origin/${DOCS} ${DOCS}
  find -mindepth 2 ! -wholename "./docs/build*" ! -wholename "./.git*" -exec rm -rf "{}" +

  mv docs .tmp
  mv .tmp/build/* .
  rm -rf .tmp

  git add .
  git commit -m "docs: actualizar documentación $(date +'%Y-%m-%d %H:%M:%S')"
  git push origin ${DOCS} --force
  git checkout -q $BRANCH
  echo ""
fi
exit 0;